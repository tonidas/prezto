#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

#
# Editors
#

export EDITOR='nano'
export VISUAL='nano'
export PAGER='less'

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  /usr/local/{bin,sbin}
  $path
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$LOGNAME"
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"

# Docker aliases
alias docker-clear="docker rm $(docker ps -a -q)"

alias dbs="~/.zprezto/scripts/start_dbs.sh && ~/.zprezto/scripts/update_db_hosts.sh"


# Kubernetes aliases

alias krr="export KUBECONFIG=~/workspace/java/roadrunner/config/james_bond/kubernetes/production/kubeconfig"
alias kmin="export KUBECONFIG=~/.kube/config"

alias k="kubectl"

podByIndex(){
  k get pods -o "jsonpath={.items[$1].metadata.name}"
}

sshByIndex(){
  k exec -it $(k get pods -o jsonpath={.items[$1].metadata.name}) /bin/bash
}

sshPod(){
  if [ -z "$2" ]
    then
      echo "Opening bash on default container of '$1' pod"
      k exec -it $1 /bin/bash
  else
    echo "Opening bash on container '$2' ('$1' pod)"
    k exec -it $1 -c $2 /bin/bash
  fi
}


alias ki=podByIndex
alias kssh=sshPod

alias rr-instances="aws ec2 describe-instances --filter Name=tag:Project,Values=roadrunner --query='Reservations[].Instances[].[PublicIpAddress]' --output=table"

